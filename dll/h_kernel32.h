/*  ===================================================================
    type definitions
    ====================================================================*/

typedef BOOL	(WINAPI *GetDiskFreeSpaceA_Type)(LPCSTR, LPDWORD, LPDWORD, LPDWORD, LPDWORD);
typedef UINT	(WINAPI *GetDriveTypeA_Type)(LPCSTR);
typedef UINT	(WINAPI *GetDriveTypeW_Type)(LPWSTR);
typedef DWORD	(WINAPI *GetLogicalDrives_Type)(void);
typedef void	(WINAPI *GetLocalTime_Type)(LPSYSTEMTIME);
typedef FARPROC (WINAPI *GetProcAddress_Type)(HMODULE, LPCSTR);
typedef void	(WINAPI *GetSystemTime_Type)(LPSYSTEMTIME);
typedef void	(WINAPI *GetSystemTimeAsFileTime_Type)(LPFILETIME);
typedef UINT	(WINAPI *GetTempFileName_TypeA)(LPCSTR, LPCSTR, UINT, LPSTR);
typedef UINT	(WINAPI *GetTempFileName_TypeW)(LPCWSTR, LPCWSTR, UINT, LPWSTR);
typedef DWORD	(WINAPI *GetTickCount_Type)(void);
typedef DWORD	(WINAPI *GetVersion_Type)(void);
typedef BOOL	(WINAPI *GetVersionExA_Type)(LPOSVERSIONINFOA);
typedef BOOL	(WINAPI *GetVersionExW_Type)(LPOSVERSIONINFOW);
typedef void	(WINAPI *GlobalMemoryStatus_Type)(LPMEMORYSTATUS);
typedef HMODULE (WINAPI *LoadLibraryA_Type)(LPCTSTR);
typedef HMODULE (WINAPI *LoadLibraryExA_Type)(LPCTSTR, HANDLE, DWORD);
typedef HMODULE (WINAPI *LoadLibraryW_Type)(LPCWSTR);
typedef HMODULE (WINAPI *LoadLibraryExW_Type)(LPCWSTR, HANDLE, DWORD);
typedef BOOL	(WINAPI *ReadFile_Type)(HANDLE, LPVOID, DWORD, LPDWORD, LPOVERLAPPED);
typedef LPTOP_LEVEL_EXCEPTION_FILTER
(WINAPI *SetUnhandledExceptionFilter_Type)(LPTOP_LEVEL_EXCEPTION_FILTER);
typedef void	(WINAPI *Sleep_Type)(DWORD);
typedef DWORD	(WINAPI *SleepEx_Type)(DWORD, BOOL);
typedef HANDLE  (WINAPI *CreateFileA_Type)(LPCTSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
typedef HANDLE  (WINAPI *CreateFileW_Type)(LPCWSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
typedef DWORD	(WINAPI *SetFilePointer_Type)(HANDLE, LONG, PLONG, DWORD);
typedef BOOL	(WINAPI *CloseHandle_Type)(HANDLE);
typedef BOOL	(WINAPI *QueryPerformanceFrequency_Type)(LARGE_INTEGER *);
typedef BOOL	(WINAPI *QueryPerformanceCounter_Type)(LARGE_INTEGER *);
typedef BOOL	(WINAPI *QueryPerformanceFrequency_Type)(LARGE_INTEGER *);
typedef BOOL	(WINAPI *GetExitCodeProcess_Type)(HANDLE, LPDWORD);
typedef BOOL	(WINAPI *FreeLibrary_Type)(HMODULE);
typedef LONG	(WINAPI *UnhandledExceptionFilter_Type)(LPEXCEPTION_POINTERS);
typedef void	(WINAPI *OutputDebugStringA_Type)(LPCTSTR);
typedef void	(WINAPI *OutputDebugStringW_Type)(LPCWSTR);
typedef HANDLE	(WINAPI *FindFirstFileA_Type)(LPCTSTR, LPWIN32_FIND_DATAA);
typedef BOOL	(WINAPI *FindNextFileA_Type)(HANDLE, LPWIN32_FIND_DATAA);
typedef DWORD	(WINAPI *GetFileAttributesA_Type)(LPCSTR);
typedef BOOL	(WINAPI *GetVolumeInformationA_Type)(LPCSTR, LPSTR, DWORD, LPDWORD, LPDWORD, LPDWORD, LPSTR, DWORD);
typedef DWORD	(WINAPI *GetLogicalDriveStringsA_Type)(DWORD, LPCSTR);
typedef DWORD	(WINAPI *GetLogicalDriveStringsW_Type)(DWORD, LPWSTR);
typedef BOOL	(WINAPI *SetCurrentDirectoryA_Type)(LPCSTR);
typedef LPVOID (WINAPI *VirtualAlloc_Type)(LPVOID, SIZE_T, DWORD, DWORD);
typedef BOOL	(WINAPI *CreateProcessA_Type)(LPCTSTR, LPTSTR, LPSECURITY_ATTRIBUTES, LPSECURITY_ATTRIBUTES,
        BOOL, DWORD, LPVOID, LPCTSTR, LPSTARTUPINFO, LPPROCESS_INFORMATION);
typedef BOOL	(WINAPI *CreateProcessW_Type)(LPCWSTR, LPWSTR, LPSECURITY_ATTRIBUTES, LPSECURITY_ATTRIBUTES,
        BOOL, DWORD, LPVOID, LPCWSTR, LPSTARTUPINFOW, LPPROCESS_INFORMATION);
typedef BOOL	(WINAPI *SetPriorityClass_Type)(HANDLE, DWORD);
typedef UINT	(WINAPI *WinExec_Type)(LPCSTR, UINT);
typedef BOOL	(WINAPI *GlobalUnlock_Type)(HGLOBAL);
typedef LPVOID	(WINAPI *HeapAlloc_Type)(HANDLE, DWORD, SIZE_T);
typedef LPVOID	(WINAPI *HeapReAlloc_Type)(HANDLE, DWORD, LPVOID, SIZE_T);
typedef HANDLE	(WINAPI *HeapCreate_Type)(DWORD, SIZE_T, SIZE_T);
typedef BOOL	(WINAPI *HeapFree_Type)(HANDLE, DWORD, LPVOID);
typedef SIZE_T	(WINAPI *HeapCompact_Type)(HANDLE, DWORD);
typedef HANDLE	(WINAPI *GetProcessHeap_Type)(void);
typedef BOOL	(WINAPI *HeapDestroy_Type)(HANDLE);
typedef SIZE_T	(WINAPI *HeapSize_Type)(HANDLE Heap, DWORD dwFlags, LPCVOID lpMem);
typedef BOOL	(WINAPI *IsProcessorFeaturePresent_Type)(DWORD);
typedef BOOL	(WINAPI *SetCurrentDirectoryW_Type)(LPWSTR);
typedef HFILE	(WINAPI *_lopen_Type)(LPCSTR, int);
typedef HFILE	(WINAPI *_lcreat_Type)(LPCSTR, int);
typedef BOOL	(WINAPI *DeleteFileA_Type)(LPCSTR);
typedef BOOL	(WINAPI *MoveFileA_Type)(LPCSTR, LPCSTR);
typedef HFILE	(WINAPI *OpenFile_Type)(LPCSTR, LPOFSTRUCT, UINT);
typedef HANDLE  (WINAPI *CreateFileMappingA_Type)(HANDLE, LPSECURITY_ATTRIBUTES, DWORD, DWORD, DWORD, LPCSTR);
typedef VOID	(WINAPI *RaiseException_Type)(DWORD, DWORD, DWORD, CONST ULONG_PTR *);
typedef VOID	(WINAPI *HandleCriticalSection_Type)(LPCRITICAL_SECTION);

/*  ===================================================================
    hooked APIs real pointers
    ====================================================================*/

DXWEXTERN GetDiskFreeSpaceA_Type pGetDiskFreeSpaceA DXWINITIALIZED;
DXWEXTERN GetDriveTypeA_Type pGetDriveTypeA DXWINITIALIZED;
DXWEXTERN GetDriveTypeW_Type pGetDriveTypeW DXWINITIALIZED;
DXWEXTERN GetLogicalDrives_Type pGetLogicalDrives DXWINITIALIZED;
DXWEXTERN GetLocalTime_Type pGetLocalTime DXWINITIALIZED;
DXWEXTERN GetProcAddress_Type pGetProcAddress DXWINITIALIZED;
DXWEXTERN GetSystemTime_Type pGetSystemTime DXWINITIALIZED;
DXWEXTERN GetSystemTimeAsFileTime_Type pGetSystemTimeAsFileTime DXWINITIALIZED;
DXWEXTERN GetTempFileName_TypeA pGetTempFileNameA DXWINITIALIZED;
DXWEXTERN GetTempFileName_TypeW pGetTempFileNameW DXWINITIALIZED;
DXWEXTERN GetTickCount_Type pGetTickCount DXWINITIALIZED;
DXWEXTERN GetVersion_Type pGetVersion DXWINITIALIZED;
DXWEXTERN GetVersionExA_Type pGetVersionExA DXWINITIALIZED;
DXWEXTERN GetVersionExW_Type pGetVersionExW DXWINITIALIZED;
DXWEXTERN GlobalMemoryStatus_Type pGlobalMemoryStatus DXWINITIALIZED;
DXWEXTERN LoadLibraryA_Type pLoadLibraryA DXWINITIALIZED;
DXWEXTERN LoadLibraryExA_Type pLoadLibraryExA DXWINITIALIZED;
DXWEXTERN LoadLibraryW_Type pLoadLibraryW DXWINITIALIZED;
DXWEXTERN LoadLibraryExW_Type pLoadLibraryExW DXWINITIALIZED;
DXWEXTERN ReadFile_Type pReadFile DXWINITIALIZED;
DXWEXTERN SetUnhandledExceptionFilter_Type pSetUnhandledExceptionFilter DXWINITIALIZED;
DXWEXTERN Sleep_Type pSleep DXWINITIALIZED;
DXWEXTERN SleepEx_Type pSleepEx DXWINITIALIZED;
DXWEXTERN CreateFileA_Type pCreateFileA DXWINITIALIZED;
DXWEXTERN CreateFileW_Type pCreateFileW DXWINITIALIZED;
DXWEXTERN SetFilePointer_Type pSetFilePointer DXWINITIALIZED;
DXWEXTERN CloseHandle_Type pCloseHandle DXWINITIALIZED;
DXWEXTERN QueryPerformanceFrequency_Type pQueryPerformanceFrequency DXWINITIALIZED;
DXWEXTERN QueryPerformanceCounter_Type pQueryPerformanceCounter DXWINITIALIZED;
DXWEXTERN GetExitCodeProcess_Type pGetExitCodeProcess DXWINITIALIZED;
DXWEXTERN FreeLibrary_Type pFreeLibrary DXWINITIALIZED;
DXWEXTERN UnhandledExceptionFilter_Type pUnhandledExceptionFilter DXWINITIALIZED;
DXWEXTERN OutputDebugStringA_Type pOutputDebugStringA;
DXWEXTERN OutputDebugStringW_Type pOutputDebugStringW;
DXWEXTERN FindFirstFileA_Type pFindFirstFileA;
DXWEXTERN FindNextFileA_Type pFindNextFileA;
DXWEXTERN GetFileAttributesA_Type pGetFileAttributesA;
DXWEXTERN GetVolumeInformationA_Type pGetVolumeInformationA;
DXWEXTERN GetLogicalDriveStringsA_Type pGetLogicalDriveStringsA;
DXWEXTERN GetLogicalDriveStringsW_Type pGetLogicalDriveStringsW;
DXWEXTERN SetCurrentDirectoryA_Type pSetCurrentDirectoryA;
DXWEXTERN CreateProcessA_Type pCreateProcessA DXWINITIALIZED;
DXWEXTERN CreateProcessW_Type pCreateProcessW DXWINITIALIZED;
DXWEXTERN VirtualAlloc_Type pVirtualAlloc DXWINITIALIZED;
DXWEXTERN WinExec_Type pWinExec DXWINITIALIZED;
DXWEXTERN SetPriorityClass_Type pSetPriorityClass DXWINITIALIZED;
DXWEXTERN GlobalUnlock_Type pGlobalUnlock DXWINITIALIZED;
DXWEXTERN HeapAlloc_Type pHeapAlloc;
DXWEXTERN HeapReAlloc_Type pHeapReAlloc;
DXWEXTERN HeapCreate_Type pHeapCreate;
DXWEXTERN HeapFree_Type pHeapFree, pHeapValidate;
DXWEXTERN HeapCompact_Type pHeapCompact;
DXWEXTERN GetProcessHeap_Type pGetProcessHeap;
DXWEXTERN HeapDestroy_Type pHeapDestroy;
DXWEXTERN HeapSize_Type pHeapSize;
DXWEXTERN IsProcessorFeaturePresent_Type pIsProcessorFeaturePresent;
DXWEXTERN SetCurrentDirectoryW_Type pSetCurrentDirectoryW;
DXWEXTERN _lopen_Type p_lopen;
DXWEXTERN _lcreat_Type p_lcreat;
DXWEXTERN DeleteFileA_Type pDeleteFileA;
DXWEXTERN MoveFileA_Type pMoveFileA;
DXWEXTERN OpenFile_Type pOpenFile;
DXWEXTERN CreateFileMappingA_Type pCreateFileMappingA;
DXWEXTERN RaiseException_Type pRaiseException;
DXWEXTERN HandleCriticalSection_Type pInitializeCriticalSection;
DXWEXTERN HandleCriticalSection_Type pEnterCriticalSection;
DXWEXTERN HandleCriticalSection_Type pLeaveCriticalSection;
DXWEXTERN HandleCriticalSection_Type pDeleteCriticalSection;

/*  ===================================================================
    hook procedures (possibly more than one per each API...)
    ====================================================================*/

extern BOOL WINAPI extGetDiskFreeSpaceA(LPCSTR, LPDWORD, LPDWORD, LPDWORD, LPDWORD);
extern UINT WINAPI extGetDriveTypeA(LPCSTR);
extern UINT WINAPI extGetDriveTypeW(LPWSTR);
extern DWORD WINAPI extGetLogicalDrives(void);
extern void WINAPI extGetLocalTime(LPSYSTEMTIME);
extern FARPROC WINAPI extGetProcAddress(HMODULE, LPCSTR);
extern void WINAPI extGetSystemTime(LPSYSTEMTIME);
extern void WINAPI extGetSystemTimeAsFileTime(LPFILETIME);
extern UINT WINAPI extGetTempFileNameA(LPCSTR, LPCSTR, UINT, LPSTR);
extern UINT WINAPI extGetTempFileNameW(LPCWSTR, LPCWSTR, UINT, LPWSTR);
extern DWORD WINAPI extGetTickCount(void);
extern DWORD WINAPI extGetVersion(void);
extern BOOL WINAPI extGetVersionExA(LPOSVERSIONINFOA);
extern BOOL WINAPI extGetVersionExW(LPOSVERSIONINFOW);
extern void WINAPI extGlobalMemoryStatus(LPMEMORYSTATUS);
extern int WINAPI extIsDebuggerPresent(void);
extern BOOL WINAPI extCheckRemoteDebuggerPresent(HANDLE, PBOOL);
extern HMODULE WINAPI extLoadLibraryA(LPCTSTR);
extern HMODULE WINAPI extLoadLibraryExA(LPCTSTR, HANDLE, DWORD);
extern HMODULE WINAPI extLoadLibraryW(LPCWSTR);
extern HMODULE WINAPI extLoadLibraryExW(LPCWSTR, HANDLE, DWORD);
extern BOOL WINAPI extReadFile(HANDLE, LPVOID, DWORD, LPDWORD, LPOVERLAPPED);
extern LPTOP_LEVEL_EXCEPTION_FILTER WINAPI extSetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER);
extern void WINAPI extSleep(DWORD);
extern DWORD WINAPI extSleepEx(DWORD, BOOL);
extern HANDLE WINAPI extCreateFileA(LPCTSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
extern HANDLE WINAPI extCreateFileW(LPCWSTR, DWORD, DWORD, LPSECURITY_ATTRIBUTES, DWORD, DWORD, HANDLE);
extern DWORD WINAPI extSetFilePointer(HANDLE, LONG, PLONG, DWORD);
extern BOOL WINAPI extCloseHandle(HANDLE);
extern BOOL WINAPI extCreateProcessA(LPCTSTR, LPTSTR, LPSECURITY_ATTRIBUTES, LPSECURITY_ATTRIBUTES, BOOL, DWORD, LPVOID, LPCTSTR, LPSTARTUPINFO, LPPROCESS_INFORMATION);
extern BOOL WINAPI extCreateProcessW(LPCWSTR, LPWSTR, LPSECURITY_ATTRIBUTES, LPSECURITY_ATTRIBUTES, BOOL, DWORD, LPVOID, LPCWSTR, LPSTARTUPINFOW, LPPROCESS_INFORMATION);
extern BOOL WINAPI extGetExitCodeProcess(HANDLE, LPDWORD);
extern BOOL WINAPI extQueryPerformanceFrequency(LARGE_INTEGER *);
extern BOOL WINAPI extQueryPerformanceCounter(LARGE_INTEGER *);
extern BOOL WINAPI extFreeLibrary(HMODULE);
extern LONG WINAPI extUnhandledExceptionFilter(LPEXCEPTION_POINTERS);
extern void WINAPI extOutputDebugStringA(LPCTSTR);
extern void WINAPI extOutputDebugStringW(LPCWSTR);
extern HANDLE WINAPI extFindFirstFileA(LPCTSTR, LPWIN32_FIND_DATAA);
extern BOOL WINAPI extFindNextFileA(HANDLE, LPWIN32_FIND_DATAA);
extern DWORD WINAPI extGetFileAttributesA(LPCSTR);
extern BOOL WINAPI extGetVolumeInformationA(LPCSTR, LPSTR, DWORD, LPDWORD, LPDWORD, LPDWORD, LPSTR, DWORD);
extern DWORD WINAPI extGetLogicalDriveStringsA(DWORD, LPCSTR);
extern DWORD WINAPI extGetLogicalDriveStringsW(DWORD, LPWSTR);
extern BOOL WINAPI extSetCurrentDirectoryA(LPCSTR);
extern BOOL WINAPI extCheckRemoteDebuggerPresent(HANDLE, PBOOL);
extern LPVOID WINAPI extVirtualAlloc(LPVOID, SIZE_T, DWORD, DWORD);
extern UINT WINAPI extWinExec(LPCSTR, UINT);
extern BOOL WINAPI extSetPriorityClass(HANDLE, DWORD);
extern BOOL WINAPI extGlobalUnlock(HGLOBAL);
extern LPVOID WINAPI extHeapAlloc(HANDLE, DWORD, SIZE_T);
extern LPVOID WINAPI extHeapReAlloc(HANDLE, DWORD, LPVOID, SIZE_T);
extern HANDLE WINAPI extHeapCreate(DWORD, SIZE_T, SIZE_T);
extern BOOL WINAPI extHeapFree(HANDLE, DWORD, LPVOID);
extern BOOL WINAPI extHeapValidate(HANDLE, DWORD, LPVOID);
extern SIZE_T WINAPI extHeapCompact(HANDLE, DWORD);
extern HANDLE WINAPI extGetProcessHeap(void);
extern BOOL WINAPI extHeapDestroy(HANDLE);
extern SIZE_T WINAPI extHeapSize(HANDLE, DWORD, LPCVOID);
extern BOOL WINAPI extIsProcessorFeaturePresent(DWORD);
extern BOOL WINAPI extSetCurrentDirectoryW(LPWSTR);
extern HFILE WINAPI ext_lopen(LPCSTR, int);
extern HFILE WINAPI ext_lcreat(LPCSTR, int);
extern BOOL WINAPI extDeleteFileA(LPCSTR);
extern BOOL WINAPI extMoveFileA(LPCSTR, LPCSTR);
extern HFILE WINAPI extOpenFile(LPCSTR, LPOFSTRUCT, UINT);
extern HANDLE WINAPI extCreateFileMappingA(HANDLE, LPSECURITY_ATTRIBUTES, DWORD, DWORD, DWORD, LPCSTR);
extern VOID	WINAPI extRaiseException(DWORD, DWORD, DWORD, CONST ULONG_PTR *);
extern void WINAPI extInitializeCriticalSection(LPCRITICAL_SECTION);
extern void WINAPI extEnterCriticalSection(LPCRITICAL_SECTION);
extern void WINAPI extLeaveCriticalSection(LPCRITICAL_SECTION);
extern void WINAPI extDeleteCriticalSection(LPCRITICAL_SECTION);
