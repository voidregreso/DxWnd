/*  ===================================================================
    type definitions
    ====================================================================*/

typedef HDC		(WINAPI *BeginPaint_Type)(HWND, LPPAINTSTRUCT);
typedef LRESULT (WINAPI *CallWindowProc_Type)(WNDPROC, HWND, UINT, WPARAM, LPARAM);
typedef LONG	(WINAPI *ChangeDisplaySettingsA_Type)(DEVMODEA *, DWORD);
typedef LONG	(WINAPI *ChangeDisplaySettingsExA_Type)(LPCTSTR, DEVMODEA *, HWND, DWORD, LPVOID);
typedef LONG	(WINAPI *ChangeDisplaySettingsW_Type)(DEVMODEW *, DWORD);
typedef LONG	(WINAPI *ChangeDisplaySettingsExW_Type)(LPCTSTR, DEVMODEW *, HWND, DWORD, LPVOID);
typedef BOOL	(WINAPI *ClientToScreen_Type)(HWND, LPPOINT);
typedef BOOL	(WINAPI *ClipCursor_Type)(const RECT *);
typedef HWND	(WINAPI *CreateDialogIndirectParamA_Type)(HINSTANCE, LPCDLGTEMPLATEA, HWND, DLGPROC, LPARAM);
typedef HWND	(WINAPI *CreateDialogParam_Type)(HINSTANCE, LPCTSTR, HWND, DLGPROC, LPARAM);
typedef HWND	(WINAPI *CreateWindowExA_Type)(DWORD, LPCTSTR, LPCTSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, LPVOID);
typedef HWND	(WINAPI *CreateWindowExW_Type)(DWORD, LPCWSTR, LPCWSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, LPVOID);
typedef LRESULT (WINAPI *DefWindowProc_Type)(HWND, UINT, WPARAM, LPARAM);
typedef int		(WINAPI *DrawTextA_Type)(HDC, LPCTSTR, int, LPRECT, UINT);
typedef int		(WINAPI *DrawTextW_Type)(HDC, LPCWSTR, int, LPRECT, UINT);
typedef int		(WINAPI *DrawTextExA_Type)(HDC, LPCTSTR, int, LPRECT, UINT, LPDRAWTEXTPARAMS);
typedef int		(WINAPI *DrawTextExW_Type)(HDC, LPCWSTR, int, LPRECT, UINT, LPDRAWTEXTPARAMS);
typedef BOOL	(WINAPI *EndPaint_Type)(HWND, const PAINTSTRUCT *);
typedef LONG	(WINAPI *EnumDisplaySettings_Type)(LPCTSTR, DWORD, LPDEVMODEA);
typedef int		(WINAPI *FillRect_Type)(HDC, const RECT *, HBRUSH);
typedef int		(WINAPI *FrameRect_Type)(HDC, const RECT *, HBRUSH);
typedef BOOL	(WINAPI *GetClientRect_Type)(HWND, LPRECT);
typedef BOOL	(WINAPI *GetClipCursor_Type)(LPRECT);
typedef BOOL	(WINAPI *GetCursorPos_Type)(LPPOINT);
typedef HDC		(WINAPI *GDIGetDC_Type)(HWND);
typedef HWND	(WINAPI *GetDesktopWindow_Type)(void);
typedef BOOL	(WINAPI *GetMessage_Type)(LPMSG, HWND, UINT, UINT);
typedef BOOL	(WINAPI *GetMonitorInfo_Type)(HMONITOR, LPMONITORINFO);
typedef int		(WINAPI *GetSystemMetrics_Type)(int);
typedef HWND	(WINAPI *GetTopWindow_Type)(HWND);
typedef int		(WINAPI *GetUpdateRgn_Type)(HWND, HRGN, BOOL);
typedef LONG	(WINAPI *GetWindowLong_Type)(HWND, int);
typedef BOOL	(WINAPI *GetWindowRect_Type)(HWND, LPRECT);
typedef BOOL	(WINAPI *InvalidateRect_Type)(HWND, CONST RECT *, BOOL);
typedef int		(WINAPI *MapWindowPoints_Type)(HWND, HWND, LPPOINT, UINT);
typedef BOOL	(WINAPI *MoveWindow_Type)(HWND, int, int, int, int, BOOL);
typedef BOOL	(WINAPI *PeekMessage_Type)(LPMSG, HWND, UINT, UINT, UINT);
typedef BOOL	(WINAPI *RedrawWindow_Type)(HWND, const RECT *, HRGN, UINT);
typedef ATOM	(WINAPI *RegisterClassExA_Type)(WNDCLASSEXA *);
typedef ATOM	(WINAPI *RegisterClassA_Type)(WNDCLASSA *);
typedef ATOM	(WINAPI *RegisterClassExW_Type)(WNDCLASSEXW *);
typedef ATOM	(WINAPI *RegisterClassW_Type)(WNDCLASSW *);
typedef int		(WINAPI *GDIReleaseDC_Type)(HWND, HDC);
typedef BOOL	(WINAPI *ScreenToClient_Type)(HWND, LPPOINT);
typedef LRESULT (WINAPI *SendMessage_Type)(HWND, UINT, WPARAM, LPARAM);
typedef HCURSOR (WINAPI *SetCursor_Type)(HCURSOR);
typedef BOOL	(WINAPI *SetCursorPos_Type)(int, int);
typedef UINT_PTR(WINAPI *SetTimer_Type)(HWND, UINT_PTR, UINT, TIMERPROC);
typedef LONG	(WINAPI *SetWindowLong_Type)(HWND, int, LONG);
typedef BOOL	(WINAPI *SetWindowPos_Type)(HWND, HWND, int, int, int, int, UINT);
typedef int		(WINAPI *ShowCursor_Type)(BOOL);
typedef BOOL	(WINAPI *ShowWindow_Type)(HWND, int);
typedef LONG	(WINAPI *TabbedTextOutA_Type)(HDC, int, int, LPCTSTR, int, int, const LPINT, int);
typedef LONG	(WINAPI *TabbedTextOutW_Type)(HDC, int, int, LPCWSTR, int, int, const LPINT, int);
typedef BOOL	(WINAPI *DestroyWindow_Type)(HWND);
typedef BOOL	(WINAPI *CloseWindow_Type)(HWND);
typedef BOOL	(WINAPI *SetSysColors_Type)(int, const INT *, const COLORREF *);
typedef HDC		(WINAPI *GetDCEx_Type)(HWND, HRGN, DWORD);
typedef BOOL	(WINAPI *UpdateWindow_Type)(HWND);
typedef BOOL	(WINAPI *GetWindowPlacement_Type)(HWND, WINDOWPLACEMENT *);
typedef BOOL	(WINAPI *SetWindowPlacement_Type)(HWND, WINDOWPLACEMENT *);
typedef HWND	(WINAPI *SetCapture_Type)(HWND);
typedef BOOL	(WINAPI *ReleaseCapture_Type)(void);
typedef HWND	(WINAPI *GetForegroundWindow_Type)(void);
typedef HWND	(WINAPI *GetActiveWindow_Type)(void);
typedef BOOL	(WINAPI *IsWindowVisible_Type)(HWND);
typedef BOOL	(WINAPI *SystemParametersInfo_Type)(UINT, UINT, PVOID, UINT);
typedef BOOL	(WINAPI *KillTimer_Type)(HWND, UINT_PTR);
typedef BOOL	(WINAPI *GetUpdateRect_Type)(HWND, LPRECT, BOOL);
typedef BOOL	(WINAPI *GetCursorInfo_Type)(PCURSORINFO);
typedef HWND	(WINAPI *WindowFromPoint_Type)(POINT);
typedef HWND	(WINAPI *ChildWindowFromPoint_Type)(HWND, POINT);
typedef HWND	(WINAPI *ChildWindowFromPointEx_Type)(HWND, POINT, UINT);
typedef int		(WINAPI *GetWindowTextA_Type)(HWND, LPTSTR, int);
typedef BOOL	(WINAPI *BringWindowToTop_Type)(HWND);
typedef BOOL	(WINAPI *SetForegroundWindow_Type)(HWND);
typedef HHOOK	(WINAPI *SetWindowsHookEx_Type)(int, HOOKPROC, HINSTANCE, DWORD);
typedef BOOL	(WINAPI *UnhookWindowsHookEx_Type)(HHOOK);
typedef HRESULT (WINAPI *MessageBoxTimeoutA_Type)(HWND, LPCSTR, LPCSTR, UINT, WORD, DWORD);
typedef HRESULT (WINAPI *MessageBoxTimeoutW_Type)(HWND, LPCWSTR, LPCWSTR, UINT, WORD, DWORD);
typedef BOOL	(WINAPI *IsIconic_Type)(HWND);
typedef BOOL	(WINAPI *IsZoomed_Type)(HWND);
typedef HDESK	(WINAPI *CreateDesktop_Type)(LPCTSTR, LPCTSTR, DEVMODE *, DWORD, ACCESS_MASK, LPSECURITY_ATTRIBUTES);
typedef BOOL	(WINAPI *SwitchDesktop_Type)(HDESK);
typedef HDESK	(WINAPI *OpenDesktop_Type)(LPTSTR, DWORD, BOOL, ACCESS_MASK);
typedef BOOL	(WINAPI *CloseDesktop_Type)(HDESK);
typedef int		(WINAPI *ValidateRect_Type)(HWND, const RECT *);
typedef BOOL	(WINAPI *ScrollWindow_Type)(HWND, int, int, const RECT *, const RECT *);
typedef INT_PTR (WINAPI *DialogBoxParamA_Type)(HINSTANCE, LPCTSTR, HWND, DLGPROC, LPARAM);
typedef HWND	(WINAPI *GetParent_Type)(HWND);
typedef BOOL	(WINAPI *InvalidateRgn_Type)(HWND, HRGN, BOOL);
typedef BOOL	(WINAPI *InvertRect_Type)(HDC, const RECT *);
typedef BOOL	(WINAPI *ScrollDC_Type)(HDC, int, int, const RECT *, const RECT *, HRGN, LPRECT);
typedef BOOL	(WINAPI *DrawIcon_Type)(HDC hDC, int X, int Y, HICON hIcon);
typedef BOOL	(WINAPI *DrawIconEx_Type)(HDC, int, int, HICON, int, int, UINT, HBRUSH, UINT);
typedef BOOL	(WINAPI *DrawCaption_Type)(HWND, HDC, LPCRECT, UINT);
typedef BOOL	(WINAPI *PaintDesktop_Type)(HDC);
typedef VOID	(WINAPI *mouse_event_Type)(DWORD, DWORD, DWORD, DWORD, ULONG_PTR);
typedef BOOL	(WINAPI *ShowScrollBar_Type)(HWND, int, BOOL);
typedef BOOL	(WINAPI *DrawMenuBar_Type)(HWND);
typedef BOOL	(WINAPI *TranslateMessage_Type)(MSG *);
typedef BOOL	(WINAPI *EnumDisplayDevicesA_Type)(LPCSTR, DWORD, PDISPLAY_DEVICE, DWORD);
typedef BOOL	(WINAPI *EnumDisplayDevicesW_Type)(LPCWSTR, DWORD, PDISPLAY_DEVICEW, DWORD);
typedef INT_PTR (WINAPI *DialogBoxIndirectParamA_Type)(HINSTANCE, LPCDLGTEMPLATE, HWND, DLGPROC, LPARAM);
typedef HWND	(WINAPI *GetTopWindow_Type)(HWND);
typedef DWORD	(WINAPI *GetWindowThreadProcessId_Type)(HWND, LPDWORD);
typedef HWND	(WINAPI *GetWindow_Type)(HWND, UINT);
typedef BOOL	(WINAPI *IsWindow_Type)(HWND);
typedef HBITMAP (WINAPI *LoadBitmapA_Type)(HINSTANCE, LPCSTR);
typedef BOOL	(WINAPI *EnumWindows_Type)(WNDENUMPROC, LPARAM);
typedef BOOL	(WINAPI *GetMessage_Type)(LPMSG, HWND, UINT, UINT);
typedef BOOL	(WINAPI *PostMessage_Type)(HWND, UINT, WPARAM, LPARAM);
typedef BOOL	(WINAPI *AdjustWindowRect_Type)(LPRECT, DWORD, BOOL);
typedef BOOL	(WINAPI *AdjustWindowRectEx_Type)(LPRECT, DWORD, BOOL, DWORD);
typedef BOOL	(WINAPI *ValidateRgn_Type)(HWND, HRGN);
typedef UINT	(WINAPI *SendInput_Type)(UINT, LPINPUT, int);
typedef HWND	(WINAPI *FindWindowA_Type)(LPCTSTR, LPCTSTR);
typedef UINT	(WINAPI *GetRawInputData_Type)(HRAWINPUT, UINT, LPVOID, PUINT, UINT);
typedef UINT	(WINAPI *GetRawInputBuffer_Type)(PRAWINPUT, PUINT, UINT);
typedef BOOL	(WINAPI *RegisterRawInputDevices_Type)(PCRAWINPUTDEVICE, UINT, UINT);
typedef UINT	(WINAPI *GetRawInputDeviceInfo_Type)(HANDLE, UINT, LPVOID, PUINT);
typedef UINT	(WINAPI *GetRawInputDeviceList_Type)(PRAWINPUTDEVICELIST, PUINT, UINT);
typedef HWND	(WINAPI *GetAncestor_Type)(HWND, UINT);
typedef HWND	(WINAPI *SetActiveWindow_Type)(HWND);
typedef int		(WINAPI *SetScrollInfo_Type)(HWND, int, LPSCROLLINFO, BOOL);
typedef BOOL	(WINAPI *GetScrollInfo_Type)(HWND, int, LPSCROLLINFO);
typedef int		(WINAPI *SetScrollPos_Type)(HWND, int, int, BOOL);
typedef BOOL	(WINAPI *GetScrollPos_Type)(HWND, int);
typedef BOOL	(WINAPI *GetScrollRange_Type)(HWND, int, LPINT, LPINT);
typedef BOOL	(WINAPI *SetScrollRange_Type)(HWND, int, int, int, BOOL);
typedef BOOL	(WINAPI *TranslateMessage_Type)(MSG *);
typedef BOOL	(WINAPI *IsDialogMessageA_Type)(HWND, LPMSG);
typedef DWORD	(WINAPI *GetMessagePos_Type)(void);
typedef HANDLE (WINAPI *LoadImageA_Type)(HINSTANCE, LPCSTR, UINT, int, int, UINT);
typedef SHORT (WINAPI *GetAsyncKeyState_Type)(int);
//typedef BOOL (WINAPI *EnumDisplayMonitors_Type)(HDC, LPCRECT, MONITORENUMPROC, LPARAM);

/*  ===================================================================
    hooked APIs real pointers
    ====================================================================*/

DXWEXTERN BeginPaint_Type pBeginPaint DXWINITIALIZED;
DXWEXTERN CallWindowProc_Type pCallWindowProcA DXWINITIALIZED;
DXWEXTERN CallWindowProc_Type pCallWindowProcW DXWINITIALIZED;
DXWEXTERN ChangeDisplaySettingsA_Type pChangeDisplaySettingsA DXWINITIALIZED;
DXWEXTERN ChangeDisplaySettingsExA_Type pChangeDisplaySettingsExA DXWINITIALIZED;
DXWEXTERN ChangeDisplaySettingsW_Type pChangeDisplaySettingsW DXWINITIALIZED;
DXWEXTERN ChangeDisplaySettingsExW_Type pChangeDisplaySettingsExW DXWINITIALIZED;
DXWEXTERN ClientToScreen_Type pClientToScreen DXWINITIALIZED;
DXWEXTERN ClipCursor_Type pClipCursor DXWINITIALIZED;
DXWEXTERN CreateDialogIndirectParamA_Type pCreateDialogIndirectParamA DXWINITIALIZED;
DXWEXTERN CreateDialogParam_Type pCreateDialogParam DXWINITIALIZED;
DXWEXTERN CreateWindowExA_Type pCreateWindowExA DXWINITIALIZED;
DXWEXTERN CreateWindowExW_Type pCreateWindowExW DXWINITIALIZED;
DXWEXTERN DefWindowProc_Type pDefWindowProcA DXWINITIALIZED;
DXWEXTERN DefWindowProc_Type pDefWindowProcW DXWINITIALIZED;
DXWEXTERN DrawTextA_Type pDrawTextA DXWINITIALIZED;
DXWEXTERN DrawTextW_Type pDrawTextW DXWINITIALIZED;
DXWEXTERN DrawTextExA_Type pDrawTextExA DXWINITIALIZED;
DXWEXTERN DrawTextExW_Type pDrawTextExW DXWINITIALIZED;
DXWEXTERN EndPaint_Type pEndPaint DXWINITIALIZED;
DXWEXTERN EnumDisplaySettings_Type pEnumDisplaySettings DXWINITIALIZED;
DXWEXTERN FillRect_Type pFillRect DXWINITIALIZED;
DXWEXTERN FrameRect_Type pFrameRect DXWINITIALIZED;
DXWEXTERN GetClientRect_Type pGetClientRect DXWINITIALIZED;
DXWEXTERN GetClipCursor_Type pGetClipCursor DXWINITIALIZED;
DXWEXTERN GetCursorPos_Type pGetCursorPos DXWINITIALIZED;
DXWEXTERN GDIGetDC_Type pGDIGetDC DXWINITIALIZED;
DXWEXTERN GetDesktopWindow_Type pGetDesktopWindow DXWINITIALIZED;
DXWEXTERN GetMonitorInfo_Type pGetMonitorInfoA DXWINITIALIZED;
DXWEXTERN GetMonitorInfo_Type pGetMonitorInfoW DXWINITIALIZED;
DXWEXTERN GetSystemMetrics_Type pGetSystemMetrics DXWINITIALIZED;
DXWEXTERN GetTopWindow_Type pGetTopWindow DXWINITIALIZED;
DXWEXTERN GDIGetDC_Type pGDIGetWindowDC DXWINITIALIZED;
DXWEXTERN GetUpdateRgn_Type pGetUpdateRgn DXWINITIALIZED;
DXWEXTERN GetWindowLong_Type pGetWindowLongA DXWINITIALIZED;
DXWEXTERN GetWindowLong_Type pGetWindowLongW DXWINITIALIZED;
DXWEXTERN GetWindowRect_Type pGetWindowRect DXWINITIALIZED;
DXWEXTERN InvalidateRect_Type pInvalidateRect DXWINITIALIZED;
DXWEXTERN MapWindowPoints_Type pMapWindowPoints DXWINITIALIZED;
DXWEXTERN MoveWindow_Type pMoveWindow DXWINITIALIZED;
DXWEXTERN PeekMessage_Type pPeekMessageA DXWINITIALIZED;
DXWEXTERN PeekMessage_Type pPeekMessageW DXWINITIALIZED;
DXWEXTERN RedrawWindow_Type pRedrawWindow DXWINITIALIZED;
DXWEXTERN RegisterClassExA_Type pRegisterClassExA DXWINITIALIZED;
DXWEXTERN RegisterClassA_Type pRegisterClassA DXWINITIALIZED;
DXWEXTERN RegisterClassExW_Type pRegisterClassExW DXWINITIALIZED;
DXWEXTERN RegisterClassW_Type pRegisterClassW DXWINITIALIZED;
DXWEXTERN GDIReleaseDC_Type pGDIReleaseDC DXWINITIALIZED;
DXWEXTERN ScreenToClient_Type pScreenToClient DXWINITIALIZED;
DXWEXTERN SendMessage_Type pSendMessageA DXWINITIALIZED;
DXWEXTERN SendMessage_Type pSendMessageW DXWINITIALIZED;
DXWEXTERN SetCursorPos_Type pSetCursorPos DXWINITIALIZED;
DXWEXTERN SetTimer_Type pSetTimer DXWINITIALIZED;
DXWEXTERN SetWindowLong_Type pSetWindowLongA DXWINITIALIZED;
DXWEXTERN SetWindowLong_Type pSetWindowLongW DXWINITIALIZED;
DXWEXTERN SetWindowPos_Type pSetWindowPos DXWINITIALIZED;
DXWEXTERN ShowCursor_Type pShowCursor DXWINITIALIZED;
DXWEXTERN ShowWindow_Type pShowWindow DXWINITIALIZED;
DXWEXTERN TabbedTextOutA_Type pTabbedTextOutA DXWINITIALIZED;
DXWEXTERN TabbedTextOutW_Type pTabbedTextOutW DXWINITIALIZED;
DXWEXTERN DestroyWindow_Type pDestroyWindow DXWINITIALIZED;
DXWEXTERN CloseWindow_Type pCloseWindow DXWINITIALIZED;
DXWEXTERN SetSysColors_Type pSetSysColors DXWINITIALIZED;
DXWEXTERN GetDCEx_Type pGDIGetDCEx DXWINITIALIZED;
DXWEXTERN UpdateWindow_Type pUpdateWindow DXWINITIALIZED;
DXWEXTERN GetWindowPlacement_Type pGetWindowPlacement DXWINITIALIZED;
DXWEXTERN SetWindowPlacement_Type pSetWindowPlacement DXWINITIALIZED;
DXWEXTERN GetForegroundWindow_Type pGetForegroundWindow DXWINITIALIZED;
DXWEXTERN GetActiveWindow_Type pGetActiveWindow DXWINITIALIZED;
DXWEXTERN IsWindowVisible_Type pIsWindowVisible DXWINITIALIZED;
DXWEXTERN SystemParametersInfo_Type pSystemParametersInfoA DXWINITIALIZED;
DXWEXTERN SystemParametersInfo_Type pSystemParametersInfoW DXWINITIALIZED;
DXWEXTERN KillTimer_Type pKillTimer DXWINITIALIZED;
DXWEXTERN GetUpdateRect_Type pGetUpdateRect DXWINITIALIZED;
DXWEXTERN GetCursorInfo_Type pGetCursorInfo DXWINITIALIZED;
DXWEXTERN WindowFromPoint_Type pWindowFromPoint DXWINITIALIZED;
DXWEXTERN ChildWindowFromPoint_Type pChildWindowFromPoint DXWINITIALIZED;
DXWEXTERN ChildWindowFromPointEx_Type pChildWindowFromPointEx DXWINITIALIZED;
DXWEXTERN BringWindowToTop_Type pBringWindowToTop DXWINITIALIZED;
DXWEXTERN SetForegroundWindow_Type pSetForegroundWindow DXWINITIALIZED;
DXWEXTERN SetWindowsHookEx_Type pSetWindowsHookExA DXWINITIALIZED;
DXWEXTERN SetWindowsHookEx_Type pSetWindowsHookExW DXWINITIALIZED;
DXWEXTERN UnhookWindowsHookEx_Type pUnhookWindowsHookEx DXWINITIALIZED;
DXWEXTERN MessageBoxTimeoutA_Type pMessageBoxTimeoutA DXWINITIALIZED;
DXWEXTERN MessageBoxTimeoutW_Type pMessageBoxTimeoutW DXWINITIALIZED;
DXWEXTERN CreateDesktop_Type pCreateDesktop DXWINITIALIZED;
DXWEXTERN SwitchDesktop_Type pSwitchDesktop DXWINITIALIZED;
DXWEXTERN OpenDesktop_Type pOpenDesktop DXWINITIALIZED;
DXWEXTERN CloseDesktop_Type pCloseDesktop DXWINITIALIZED;
DXWEXTERN ValidateRect_Type pValidateRect DXWINITIALIZED;
DXWEXTERN ScrollWindow_Type pScrollWindow DXWINITIALIZED;
DXWEXTERN DialogBoxParamA_Type pDialogBoxParamA DXWINITIALIZED;
DXWEXTERN InvalidateRgn_Type pInvalidateRgn DXWINITIALIZED;
DXWEXTERN InvertRect_Type pInvertRect DXWINITIALIZED;
DXWEXTERN ScrollDC_Type pScrollDC DXWINITIALIZED;
DXWEXTERN DrawIcon_Type pDrawIcon DXWINITIALIZED;
DXWEXTERN DrawIconEx_Type pDrawIconEx DXWINITIALIZED;
DXWEXTERN DrawCaption_Type pDrawCaption DXWINITIALIZED;
DXWEXTERN PaintDesktop_Type pPaintDesktop DXWINITIALIZED;
DXWEXTERN mouse_event_Type pmouse_event DXWINITIALIZED;
DXWEXTERN ShowScrollBar_Type pShowScrollBar DXWINITIALIZED;
DXWEXTERN DrawMenuBar_Type pDrawMenuBar DXWINITIALIZED;
DXWEXTERN EnumDisplayDevicesA_Type pEnumDisplayDevicesA DXWINITIALIZED;
DXWEXTERN EnumDisplayDevicesW_Type pEnumDisplayDevicesW DXWINITIALIZED;
DXWEXTERN DialogBoxIndirectParamA_Type pDialogBoxIndirectParamA DXWINITIALIZED;
DXWEXTERN EnumWindows_Type pEnumWindows DXWINITIALIZED;
DXWEXTERN GetMessage_Type pGetMessageA, pGetMessageW DXWINITIALIZED;
DXWEXTERN PostMessage_Type pPostMessageA, pPostMessageW DXWINITIALIZED;
DXWEXTERN AdjustWindowRect_Type pAdjustWindowRect DXWINITIALIZED;
DXWEXTERN AdjustWindowRectEx_Type pAdjustWindowRectEx DXWINITIALIZED;
DXWEXTERN ValidateRgn_Type pValidateRgn;
DXWEXTERN SendInput_Type pSendInput;
DXWEXTERN GetRawInputData_Type pGetRawInputData;
DXWEXTERN GetRawInputBuffer_Type pGetRawInputBuffer;
DXWEXTERN RegisterRawInputDevices_Type pRegisterRawInputDevices;
DXWEXTERN GetRawInputDeviceInfo_Type pGetRawInputDeviceInfoA, pGetRawInputDeviceInfoW;
DXWEXTERN GetRawInputDeviceList_Type pGetRawInputDeviceList;
DXWEXTERN LoadImageA_Type pLoadImageA;
DXWEXTERN GetAsyncKeyState_Type pGetAsyncKeyState;

/*  ===================================================================
    hook procedures (possibly more than one per each API...)
    ====================================================================*/

extern HDC WINAPI extBeginPaint(HWND, LPPAINTSTRUCT);
extern LRESULT WINAPI extCallWindowProcA(WNDPROC, HWND, UINT, WPARAM, LPARAM);
extern LRESULT WINAPI extCallWindowProcW(WNDPROC, HWND, UINT, WPARAM, LPARAM);
extern LONG WINAPI extChangeDisplaySettingsA(DEVMODEA *, DWORD);
extern LONG WINAPI extChangeDisplaySettingsExA(LPCTSTR, DEVMODEA *, HWND, DWORD, LPVOID);
extern LONG WINAPI extChangeDisplaySettingsW(DEVMODEW *, DWORD);
extern LONG WINAPI extChangeDisplaySettingsExW(LPCTSTR, DEVMODEW *, HWND, DWORD, LPVOID);
extern BOOL WINAPI extClientToScreen(HWND, LPPOINT);
extern BOOL WINAPI extClipCursor(LPRECT);
extern HWND WINAPI extCreateDialogIndirectParamA(HINSTANCE, LPCDLGTEMPLATE, HWND, DLGPROC, LPARAM);
extern HWND WINAPI extCreateDialogParamA(HINSTANCE, LPCSTR, HWND, DLGPROC, LPARAM);
extern HWND WINAPI extCreateWindowExA(DWORD, LPCTSTR, LPCTSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, LPVOID);
extern HWND WINAPI extCreateWindowExW(DWORD, LPCWSTR, LPCWSTR, DWORD, int, int, int, int, HWND, HMENU, HINSTANCE, LPVOID);
extern LRESULT WINAPI extDefWindowProcA(HWND, UINT, WPARAM, LPARAM);
extern LRESULT WINAPI extDefWindowProcW(HWND, UINT, WPARAM, LPARAM);
extern int WINAPI extDrawTextA(HDC, LPCTSTR, int, LPRECT, UINT);
extern int WINAPI extDrawTextExA(HDC, LPTSTR, int, LPRECT, UINT, LPDRAWTEXTPARAMS);
extern int WINAPI extDrawTextW(HDC, LPCWSTR, int, LPRECT, UINT);
extern int WINAPI extDrawTextExW(HDC, LPCWSTR, int, LPRECT, UINT, LPDRAWTEXTPARAMS);
extern BOOL WINAPI extEndPaint(HWND, const PAINTSTRUCT *);
extern LONG WINAPI extEnumDisplaySettings(LPCTSTR, DWORD, DEVMODE *);
extern int WINAPI extFillRect(HDC, const RECT *, HBRUSH);
extern int WINAPI extFrameRect(HDC, const RECT *, HBRUSH);
extern BOOL WINAPI extGetClientRect(HWND, LPRECT);
extern BOOL WINAPI extGetClipCursor(LPRECT);
extern BOOL WINAPI extGetCursorPos(LPPOINT);
extern HDC WINAPI extGDIGetDC(HWND);
extern HWND WINAPI extGetDesktopWindow(void);
extern BOOL	WINAPI extGetMonitorInfoA(HMONITOR, LPMONITORINFO);
extern BOOL	WINAPI extGetMonitorInfoW(HMONITOR, LPMONITORINFO);
extern int WINAPI extGetSystemMetrics(int);
extern HWND WINAPI extGetTopWindow(HWND);
extern int WINAPI extGetUpdateRgn(HWND, HRGN, BOOL);
extern HDC WINAPI extGDIGetWindowDC(HWND);
extern LONG WINAPI extGetWindowLongA(HWND, int);
extern LONG WINAPI extGetWindowLongW(HWND, int);
extern BOOL WINAPI extGetWindowRect(HWND, LPRECT);
extern BOOL WINAPI extInvalidateRect(HWND, RECT *, BOOL);
extern int WINAPI extMapWindowPoints(HWND, HWND, LPPOINT, UINT);
extern BOOL WINAPI extMoveWindow(HWND, int, int, int, int, BOOL);
extern BOOL WINAPI extPeekMessageA(LPMSG, HWND, UINT, UINT, UINT);
extern BOOL WINAPI extPeekMessageW(LPMSG, HWND, UINT, UINT, UINT);
extern BOOL	WINAPI extRedrawWindow(HWND, const RECT *, HRGN, UINT);
extern ATOM WINAPI extRegisterClassExA(WNDCLASSEXA *);
extern ATOM WINAPI extRegisterClassA(WNDCLASSA *);
extern ATOM WINAPI extRegisterClassExW(WNDCLASSEXW *);
extern ATOM WINAPI extRegisterClassW(WNDCLASSW *);
extern int WINAPI extGDIReleaseDC(HWND, HDC);
extern BOOL WINAPI extScreenToClient(HWND, LPPOINT);
extern LRESULT WINAPI extSendMessageA(HWND, UINT, WPARAM, LPARAM);
extern LRESULT WINAPI extSendMessageW(HWND, UINT, WPARAM, LPARAM);
extern HCURSOR WINAPI extSetCursor(HCURSOR);
extern BOOL WINAPI extSetCursorPos(int, int);
extern UINT_PTR WINAPI extSetTimer(HWND, UINT_PTR, UINT, TIMERPROC);
extern LONG WINAPI extSetWindowLongA(HWND, int, LONG);
extern LONG WINAPI extSetWindowLongW(HWND, int, LONG);
extern BOOL WINAPI extSetWindowPos(HWND, HWND, int, int, int, int, UINT);
extern int WINAPI extShowCursor(BOOL);
extern BOOL WINAPI extShowWindow(HWND, int);
extern LONG WINAPI extTabbedTextOutA(HDC, int, int, LPCTSTR, int, int, const LPINT, int);
extern LONG WINAPI extTabbedTextOutW(HDC, int, int, LPCWSTR, int, int, const LPINT, int);
extern BOOL WINAPI extDestroyWindow(HWND);
extern BOOL WINAPI extCloseWindow(HWND);
extern BOOL WINAPI extSetSysColors(int, const INT *, const COLORREF *);
extern HDC WINAPI extGDIGetDCEx(HWND, HRGN, DWORD);
extern BOOL WINAPI extUpdateWindow(HWND);
extern BOOL WINAPI extGetWindowPlacement(HWND, WINDOWPLACEMENT *);
extern BOOL WINAPI extSetWindowPlacement(HWND, WINDOWPLACEMENT *);
extern HWND WINAPI extSetCapture(HWND);
extern BOOL WINAPI extReleaseCapture(void);
extern HWND WINAPI extGetForegroundWindow(void);
extern HWND WINAPI extGetActiveWindow(void);
extern BOOL WINAPI extIsWindowVisible(HWND);
extern BOOL WINAPI extSystemParametersInfoA(UINT, UINT, PVOID, UINT);
extern BOOL WINAPI extSystemParametersInfoW(UINT, UINT, PVOID, UINT);
extern BOOL WINAPI extKillTimer(HWND, UINT_PTR);
extern BOOL WINAPI extGetUpdateRect(HWND, LPRECT, BOOL);
extern BOOL WINAPI extGetCursorInfo(PCURSORINFO);
extern HWND WINAPI extWindowFromPoint(POINT);
extern HWND WINAPI extChildWindowFromPoint(HWND, POINT);
extern HWND WINAPI extChildWindowFromPointEx(HWND, POINT, UINT);
extern BOOL WINAPI extBringWindowToTop(HWND);
extern BOOL WINAPI extSetForegroundWindow(HWND);
extern HHOOK WINAPI extSetWindowsHookExA(int, HOOKPROC, HINSTANCE, DWORD);
extern HHOOK WINAPI extSetWindowsHookExW(int, HOOKPROC, HINSTANCE, DWORD);
extern BOOL WINAPI extUnhookWindowsHookEx(HHOOK);
extern HRESULT WINAPI extMessageBoxTimeoutA(HWND, LPCSTR, LPCSTR, UINT, WORD, DWORD);
extern HRESULT WINAPI extMessageBoxTimeoutW(HWND, LPCWSTR, LPCWSTR, UINT, WORD, DWORD);
extern BOOL WINAPI extIsIconic(HWND);
extern BOOL WINAPI extIsZoomed(HWND);
extern HDESK WINAPI extCreateDesktop(LPCTSTR, LPCTSTR, DEVMODE *, DWORD, ACCESS_MASK, LPSECURITY_ATTRIBUTES);
extern BOOL WINAPI extSwitchDesktop(HDESK);
extern HDESK WINAPI extOpenDesktop(LPTSTR, DWORD, BOOL, ACCESS_MASK);
extern BOOL WINAPI extCloseDesktop(HDESK);
extern int WINAPI extValidateRect(HWND, const RECT *);
extern BOOL extScrollWindow(HWND, int, int, const RECT *, const RECT *);
extern INT_PTR WINAPI extDialogBoxParamA(HINSTANCE, LPCTSTR, HWND, DLGPROC, LPARAM);
extern HWND WINAPI extGetParent(HWND);
extern BOOL WINAPI extInvalidateRgn(HWND, HRGN, BOOL);
extern BOOL WINAPI extInvertRect(HDC, const RECT *);
extern BOOL WINAPI extScrollDC(HDC, int, int, const RECT *, const RECT *, HRGN, LPRECT);
extern BOOL WINAPI extDrawIcon(HDC hDC, int X, int Y, HICON hIcon);
extern BOOL WINAPI extDrawIconEx(HDC, int, int, HICON, int, int, UINT, HBRUSH, UINT);
extern BOOL WINAPI extDrawCaption(HWND, HDC, LPCRECT, UINT);
extern BOOL WINAPI extPaintDesktop(HDC);
extern VOID WINAPI extmouse_event(DWORD, DWORD, DWORD, DWORD, ULONG_PTR);
extern BOOL WINAPI extShowScrollBar(HWND, int, BOOL);
extern BOOL WINAPI extDrawMenuBar(HWND);
extern BOOL WINAPI extEnumDisplayDevicesA(LPCSTR, DWORD, PDISPLAY_DEVICE, DWORD);
extern BOOL WINAPI extEnumDisplayDevicesW(LPCWSTR, DWORD, PDISPLAY_DEVICEW, DWORD);
extern INT_PTR WINAPI extDialogBoxIndirectParamA(HINSTANCE, LPCDLGTEMPLATE, HWND, DLGPROC, LPARAM);
extern DWORD WINAPI extGetWindowThreadProcessId(HWND, LPDWORD);
extern HWND WINAPI extGetWindow(HWND, UINT);
extern BOOL WINAPI extIsWindow(HWND);
extern BOOL WINAPI extIsWindowEnabled(HWND);
extern HBITMAP WINAPI extLoadBitmapA(HINSTANCE, LPCSTR);
extern BOOL WINAPI extEnumWindows(WNDENUMPROC, LPARAM);
extern BOOL	WINAPI extGetMessageA(LPMSG, HWND, UINT, UINT);
extern BOOL	WINAPI extGetMessageW(LPMSG, HWND, UINT, UINT);
extern BOOL	WINAPI extPostMessageA(HWND, UINT, WPARAM, LPARAM);
extern BOOL	WINAPI extPostMessageW(HWND, UINT, WPARAM, LPARAM);
extern BOOL WINAPI extAdjustWindowRect(LPRECT, DWORD, BOOL);
extern BOOL WINAPI extAdjustWindowRectEx(LPRECT, DWORD, BOOL, DWORD);
BOOL WINAPI extValidateRgn(HWND, HRGN);
UINT WINAPI extSendInput(UINT, LPINPUT, int);
HWND WINAPI extFindWindowA(LPCTSTR, LPCTSTR);
UINT WINAPI extGetRawInputData(HRAWINPUT, UINT, LPVOID, PUINT, UINT);
UINT WINAPI extGetRawInputBuffer(PRAWINPUT, PUINT, UINT);
BOOL WINAPI extRegisterRawInputDevices(PCRAWINPUTDEVICE, UINT, UINT);
UINT WINAPI extGetRawInputDeviceInfoA(HANDLE, UINT, LPVOID, PUINT);
UINT WINAPI extGetRawInputDeviceInfoW(HANDLE, UINT, LPVOID, PUINT);
UINT WINAPI extGetRawInputDeviceList(PRAWINPUTDEVICELIST, PUINT, UINT);
HWND WINAPI extGetAncestor(HWND, UINT);
HWND WINAPI extSetActiveWindow(HWND);
int WINAPI extSetScrollInfo(HWND, int, LPSCROLLINFO, BOOL);
BOOL WINAPI extGetScrollInfo(HWND, int, LPSCROLLINFO);
int WINAPI extSetScrollPos(HWND, int, int, BOOL);
BOOL WINAPI extGetScrollPos(HWND, int);
BOOL WINAPI extGetScrollRange(HWND, int, LPINT, LPINT);
BOOL WINAPI extSetScrollRange(HWND, int, int, int, BOOL);
BOOL WINAPI extTranslateMessage(MSG *);
BOOL WINAPI extIsDialogMessageA(HWND, LPMSG);
DWORD WINAPI extGetMessagePos(void);
HANDLE WINAPI extLoadImageA(HINSTANCE, LPCSTR, UINT, int, int, UINT);
SHORT WINAPI extGetAsyncKeyState(int);
//extern BOOL WINAPI extTranslateMessage(MSG *);
//extern HWND WINAPI extGetTopWindow(HWND);
//extern int WINAPI extGetWindowTextA(HWND, LPTSTR, int);
//BOOL WINAPI extEnumDisplayMonitors(HDC, LPCRECT, MONITORENUMPROC, LPARAM);
