[FixD3DWindowFrame]
help="Tries to prevent D3D from rendering on the whole window surface including the window border. It activates a small trick that cause the program to render to a child modal surface within the main window borders."
[NoD3DWindowMove]
help="Do not try to update the window position and size on D3D rendering. In some cases, the window may be movable but the rendering area does not move with it. In this case, avoid moving the window at all. It is an experimental feature and doesn't always work."
[MakeBackbufferAttachable]
help="Alters the size specification of the created backbuffer so that it copes with the actual primary surface, so that it may be attachable to a ZBUFFER surface. It makes "Dave Mirra Freestyle BMX" playable."
[BlitFromBackbuffer]
help="Some games (the Sims, the only one so far....) read graphic data from the primary surface. When the game runs windowed, the approximation introduced in a scaled window brings cumulative error that appear as a progressive smearing effect. In this case, it might be better to read the data from the backbuffer surface that is not scaled, even if in such a way you get other troubles when scrolling (see it by yourself...). The only reasonable alternative: write game code in a better way, in my opinion!"
[NoSystemMemoryOnPrimary]
help="DirectDraw applications have much better performance if they can operate on system memory rather than video memory, particularly when reading surface memory. Since the virtual primary surface has to be read before it can be transferred to the actual primary surface, it's best to use system memory offscreen surfaces whenever possible. Unfortunately, some programs request hardware acceleration functions that are only available for video surfaces. This flag forces the virtual primary surface to be created in system memory, sacrificing performance for compatibility."
[NoSystemMemoryOnBackbuffer]
help="Similar to the NoSystemMemoryOnPrimary tweak, but applied to the backbuffer surface. It's rare to need both of these flags, and which one to use depends on where the application performs the accelerated functions."
[AllowSysMemoryOn3DDevices]
help="Forces the usage of system memory on ZBUFFER surface"
[ReturnNULLReference]
help="Always return a 0 reference counter when a surface or DirectDraw session is released."
[ForcesHEL]
help="Forces Hardware Emulation Layer."
[ForcesHAL]
help="Forces Hardware Abstraction Layer."
[ForcesNULL]
help="Forces default NULL mode."
[LockColorDepth]
help="Prevents ddraw emulation to change the virtual color depth. Useful so far only with Ahlgrens Bisplet"
[FixParentWindow]
help="Typically, a game is started with an invisible program window, and then it creates a separate child window for handling the graphics. Some games use the parent window instead of the child window. In this case, the parent window becomes visible, then needs to be properly resized. This feature is currently experimental, but it seems to successfully manage several tough games, such as Solaris, SleepWalker, Sid Meier's Sim Golf, and the Worms series."
[MouseMoveByEvent]
help="Replaces the SetCursorPos system call with a mouse_event call that is better tolerated by certain games, e.g. "Wind Fantasy II""
[NoMainWindowDestruction]
help="Some games kill the main window before starting a new one, and DxWnd may not properly handle this behavior. This flag prevents the main window from being destroyed, resolving that issue."
[SendWM_ACTIVATEAPPMessage]
help="Windows sends an ACTIVATEAPP message to fullscreen programs, but may not send this message to windowed programs. This flag forces Windows to send that message, resolving cases where the hooked program expects to receive such a message."
[LegacyD3DResolutionHack]
help="Eliminates some maximum resolution checks within the D3D implementation"
[FixAILSoundLocks]
help="experimental - not working"
[SuppressIME]
help="Attempts to destroy the IME window created by the DWM Desktop Manager"
[FPSCountUpdatesBigger1/4Screen]
help="DxWnd can display an FPS counter based on the number of screen updates per second. This counter is accurate for applications that update the entire screen, but produces wildly exaggerated figures when a program makes frequent updates to small sections of the screen, such as counters, icons, or other tiny elements. This flag tells DxWnd to ignore screen updates that affect less than one quarter of the screen, producing a more realistic FPS figure."
[MakeQueriedWindowVisible]
help="Makes visible any window that is queried for its visibility status"
[FixEmpireOfTheFadingSuns]
help="Runtime patch for "Emperor of the Fading Suns" that clears a memory area responsible to inhibit ddraw blits to primary surface. It's a quick & dirty way to make the game running ok."
[KillBlackWindows]
help="Prevents the creation of annoying windows such as black background windows used to cover the desktop, but undesireable in windowed mode. Such windows are identified by window name or class, so they have to be included in a DxWnd internal list."
[ZeroDisplayCounter]
help="Forces a 0 return code in ShowCursor(FALSE) call. Fixes a bad loop conrol in "Cottage of  Leopold the Cat" game."
[ReplaceDialogs]
help="Replaces troublesome dialog windows where the program blits some graphic with more manageable plain windows."
[ManageFourCCSurfaces]
help="Allows handling of FourCC YUY2 surfaces by forcing Flip operation to bypass the emulation layer and blit directly on the video surface. This makes some movies visible."
[Forces16BitZBufferBitDepth]
help="Forces the 16bit ZBuffer bit depth on ddraw devices. Fixes a bugged control in "3D Slot Car Racing" that requires either 16bit or 24bit depth only"
[Forces24BitZBufferBitDepth]
help="Forces the 24bit ZBuffer bit depth on ddraw devices. Fixes a bugged control in "3D Slot Car Racing" that requires either 16bit or 24bit depth only"
[FullPaintRect]
help="Forces GDI32 BeginPaint to use the whole window client area as paint rectangle. Fixes "RollerCoaster Tycoon 2" partial screen updates."
[PushActiveMovieWindows]
help="Forces ActiveMovie windows used by DirectShow movie rendering to be pushed back in z-order position. Useful when the actual movie rendering is transferred on other windows and ActiveMovie windows interfere. Used for "Psychotoxic" movie rendering." 
[ForceClipChildren]
help="Forces WS_CLIPCHILDREN main window style to suppress screen flickering when there's a concurrent screen update between father and child windows. Used for "Psychotoxic" movie rendering."
[PreventMinimizeWindow]
help="Suppresses the command to minimize the main window"
[NoDisableAltTab]
help="Disable the compatibility patches that disable the Alt-Tab key combination to avoid window switching, along with other similar key combinations. Usually, programs hooked by DxWnd can afford window switching with no impact, either by default or by setting the UNNOTIFY flag."
[DisableAltTab]
help="Emulates the compatibility patch that disable the Alt-Tab key combination to avoid window switching. Beware: this tweak does NOT suppress the Windows Logo key."
[NoAccessibilityKeys]
help="Disables the automatic prompt to set accessibility keys on repeated keypress during gameplay."
[IgnoreDebugOutput]
help="emulates MS "IgnoreDebugOutput" shim."
[NoOleInitialize]
help="Suppresses harmful OLE initializations (OLEInitialize and CoInitialize) that can lead to COM error RPC_E_CHANGED_MODE (0x800010106) in DirectX systems (es. DirectSound in "Rubik's Games")."
[CacheD3DSession]
help="When activated, the GetDirect3D method will return the original session id. (Experimental.)"
[Lock24BitDepth]
help="To suppress ddraw emulation of 24 bit color depth. Helps improving "Tlon" that has many avi movies with unsupported 24 bit color depth, better rendered at 32 bit."
[LockFPSCorner]
help="Locks the FPS counter in the top left corner when used together with the Video->FPS counter->overlay flag. In addition this flag displays a hexdump just after the DxWnd splash logo for 2 seconds of all the timing related flags to be used to make sure that no cheating is used in a speedrun session. Also a message: "Speedrun OK" or "Speedrun KO" is displayed."
[NoComplexMipmaps]
help="Suppresses the request for COMPLEX+TEXURE+MIPMAP surfaces that are no longer supported by current ddraw drivers. It improves the graphic rendering and compatibility for "Extreme-G2" pc game."
[InvalidateClient]
help="Forces a window client refresh through InvalidateRect call upon each ddraw screen refresh. This updates GDI rendering that may be covered by ddraw surfaces otherwise. Fixes "Gangsters: Organized Crime" text on menus."
[D3D8MaximizeWinModeHack]
help="On Windows 10, all Direct3D8 fullscreen applications always run in fake fullscreen mode by default, which is also known as maximized windowed mode. This was done for compatibility with Game Bar, which interface doesn't show otherwise. This tweak alters a setting in Direct3D8 runtime DLL (d3d8.dll) to restore real exclusive fullscreen mode. Additionally, it disables compatibility shim for turning on maximized windowed mode. This shim also exists in Windows 8.x and is responsible for making certain games running in maximized windowed mode by default on that OS as well. This mode is not implemented on Windows 7 and earlier, so the tweak doesn't apply to those systems. Starting with Windows 10 October 2018 Update, exclusive fullscreen functionality has been removed from Direct3D8 runtime, rendering the tweak ineffective."
[RemapNumericKeypad]
help="For games that want input control from numeric keypad (namely, "Ecstatica" Windows port) it is impossible to be controlled by reduced portable pc keyboards. This tweak remaps the key codes of the arrow keys and some function keys to the numeric keypad equivalents."
[SetUSKeyDescr]
help="Makes dinput EnumObjects return US keyboard keys descriptions. This fixes a bug in Heavy Gear 2 that would recognize input key events only when the key description matches the US language key description."
[InvertMouseXAxis]
help="Inverts mouse reading on X axis"
[InvertMouseYAxis]
help="Inverts mouse reading on Y axis"
[LockSysSettings]
help="Prevents any possible system setting update that the program may request through the USER32 SystemParametersInfo call"
[ForceRelativeAxis]
help="Forces DirectInput to set relative axis mode for mouse device. Fixes a problem with an obscure game "Sacked - Your last day"."
[ForceAbsoluteAxis]
help="Forces DirectInput to set absolute axis mode for mouse device. Useless so far."
[ReplaceDirectXDLLs]
help="Forces a replacement of DirectX dlls with alternative dlls (as dgVoodoo, WineD3D, CnD-DDraw etc.) that are located in the alt.dll subfolder."
[Win98OpaqueFont]
help="Strips the alpha channel in font color specification. This emulates a Win95/98 limitation that have no capability for transparent fonts. The tweak is equivalent to a Win95/98 MS shim and makes Langrisser 3 text visible."
[FixDCAlreadyCreated]
help="tries to fix situations where GetDC may return a DDERR_DCALREADYCREATED error."
[SafePrimaryLock]
help="Double the size of memory allocated for primary surface. Some games show a bug where the Lock on the primary surface is followed by access to more memory than what should be correct, but in video memory this error could produce no effects. On the contrary, in emulation modes, the access outside the bounds of the virtualized primary surface memory leads to a crash. This happened in particular with "Signus the Artefact Wars"."
[SmackBufferNoDepth]
help="Clears the color depth specification for SMACK movie playing, so that the movie can be more easily adapted to native desktop color depths."
[CreateDCHook]
help="Enables hooking to the CreateDCA/W system calls. Unused so far."
[ChaosOverlordsFix]
help="Tweak to improve the handling of reansparency colors in "Chaos Overlords"."
[KillDeadlocks]
help="Suppress some deadlock by setting a finite timeout to Wait operations."
[LockSystemSettings]
help="bypass for all SystemParametersInfo(SPI_SET*) operations, so that the hooked program won't alter the system settings."
[RevertDIBPalette]
help="tries to convert a DIB data from 32bpp to 8bpp palettized format."
[DelayCriticalSection]
help="Insert a small delay before entering critical regions."
[FakeGlobalAtom]
help="Some programs use global atoms to lock their operations, but this way, when a program crashes, it leaves the global atom locked and makes it impossible to run the program again until the system is rebooted. This tweak pretends that a global atom is created but it is always unlocked, so that the control is passed."
[FixFolderPaths]
help="Fixes a incompatibility issue in SetCurrentDirectory when the pathname ends with a dot '.' character."
[MutexForCriticalSection]
help="Reimplements critical sections through the usage of more reliable mutexes."
[SuppressMenus]
help="Suppresses the creation of menus in the main window."

